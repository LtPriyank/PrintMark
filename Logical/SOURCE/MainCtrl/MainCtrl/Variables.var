(*Variable for Auto mode*)
VAR
	startRising : BOOL; (*For giving start to the machine*)
	startFound : BOOL; (*For interlocking start*)
	stopPressed : BOOL; (*Stopping the machine*)
	eStopPressed : BOOL; (*Estop in machine*)
	emergencyFault : BOOL; (*Emergency fault*)
	errorAckRising : BOOL; (*Error acknowledging interlock*)
	errorAckFound : BOOL; (*Error acknowledge found*)
	enAutoStep : enAutoMode; (*Auto states*)
	cutPerMinTimer : UINT; (*Timer for cuts per minute*)
	simSignalActive : UINT := 1; (*For simulated signal*)
	cutPerMinCount : UINT; (*Counter for cuts per minute*)
	machineReady : BOOL; (*Machine is ready*)
END_VAR
(*Constants*)
VAR CONSTANT
	K_ACC_FACTOR : UINT := 10;
	K_DEC_FACTOR : UINT := 10;
	CAM_SEQUENCING : BOOL := TRUE; (*CAM Sequencing Mode*)
	K_ZERO : REAL := 0.0; (*Constant for zero value*)
	K_STOP_PHASE : REAL := 360.0; (*Constant for stop in phase*)
	K_MANUAL : UINT := 0; (*Constant for manual mode*)
	K_INIT_MACHINE_SPEED : UINT := 50; (*Init value of machine speed*)
	K_MINUTE_TIMER : UDINT := 37500; (*Timer for cuts per minute*)
	MAX_ALARMS : USINT := 50; (*Maximum no. of alarms*)
	K_MAX_TEMP : UINT := 500; (*MAximum temperature allowed*)
	K_AUTO : UINT := 1; (*Constant for auto mode*)
END_VAR
(*Local Pointer method variables for accessing other modules*)
VAR
	beltConvStatus : UINT; (*Return Variable for pvxgetaddress of Belt Conv module*)
	beltConvAddress : UDINT; (*Pointer address for Belt Conv control*)
	beltConvSize : UDINT; (*Size of belt conveyor pointer variable*)
	pBeltConveyorCtrl : REFERENCE TO BeltCtrl_Typ; (*Pointer variable for accessing Belt conveyor module*)
	cutterStatus : UINT; (*Return Variable for pvxgetaddress of Cutter module*)
	cutterAddress : UDINT; (*Pointer address for Cutter control*)
	cutterSize : UDINT; (*Size of cutter pointer variable*)
	pCutterCtrl : REFERENCE TO CutterCtrl_Typ; (*Pointer variable for accessing Cutter module*)
END_VAR
(*FB for edge control*)
VAR
	R_TRIG_CPM : R_TRIG; (*Positive edge of the sensor*)
END_VAR
(*Variables for alarm*)
VAR
	iString : ARRAY[0..MAX_ALARMS] OF STRING[20]; (*Alarm name storage variable*)
	Alarm : ARRAY[0..MAX_ALARMS] OF BOOL; (*Alarm name*)
	alarmIndex : USINT; (*Index for alarms*)
END_VAR
(*Cyclic write FB*)
VAR
	IFb_MC_BR_CyclicWrite : MC_BR_CyclicWrite; (*For cyclic reading*)
END_VAR
